name: Security Scan
on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]
  schedule:
    - cron: '0 2 * * *'  # Daily at 2 AM UTC

jobs:
  secret-scan:
    name: Secret Detection
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for secret detection

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install detect-secrets
        run: |
          python -m pip install --upgrade pip
          pip install detect-secrets

      - name: Run secret scanner
        run: |
          detect-secrets scan --baseline .secrets.baseline
          detect-secrets audit .secrets.baseline

      - name: Upload secret scan results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: secret-scan-results
          path: .secrets.baseline

  security-scan:
    name: Security Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install security tools
        run: |
          python -m pip install --upgrade pip
          pip install bandit safety

      - name: Run Bandit security scan
        run: |
          bandit -r . -f json -o bandit-report.json
          bandit -r . -f txt -o bandit-report.txt

      - name: Run Safety check
        run: |
          safety check --json --output safety-report.json
          safety check --text --output safety-report.txt

      - name: Upload security reports
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: security-reports
          path: |
            bandit-report.json
            bandit-report.txt
            safety-report.json
            safety-report.txt

  dependency-scan:
    name: Dependency Vulnerability Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f "requirements.txt" ]; then
            pip install -r requirements.txt
          fi

      - name: Run Safety check
        run: |
          safety check --json --output safety-report.json
          safety check --text --output safety-report.txt

      - name: Upload dependency scan results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: dependency-scan-results
          path: |
            safety-report.json
            safety-report.txt

  yaml-scan:
    name: YAML Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install yamllint
        run: |
          python -m pip install --upgrade pip
          pip install yamllint

      - name: Run YAML linting
        run: |
          yamllint -f parsable . > yamllint-report.txt || true

      - name: Upload YAML scan results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: yaml-scan-results
          path: yamllint-report.txt

  container-scan:
    name: Container Security Scan
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: trivy-scan-results
          path: trivy-results.sarif

  security-report:
    name: Generate Security Report
    runs-on: ubuntu-latest
    needs: [secret-scan, security-scan, dependency-scan, yaml-scan]
    if: always()
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Generate security summary
        run: |
          echo "# Security Scan Summary" > security-summary.md
          echo "Generated on: $(date)" >> security-summary.md
          echo "" >> security-summary.md
          
          echo "## Secret Detection" >> security-summary.md
          if [ -f "artifacts/secret-scan-results/.secrets.baseline" ]; then
            echo "✅ Secret scan completed" >> security-summary.md
          else
            echo "❌ Secret scan failed" >> security-summary.md
          fi
          
          echo "## Security Analysis" >> security-summary.md
          if [ -f "artifacts/security-reports/bandit-report.json" ]; then
            echo "✅ Bandit security scan completed" >> security-summary.md
          else
            echo "❌ Bandit security scan failed" >> security-summary.md
          fi
          
          echo "## Dependency Scan" >> security-summary.md
          if [ -f "artifacts/dependency-scan-results/safety-report.json" ]; then
            echo "✅ Dependency vulnerability scan completed" >> security-summary.md
          else
            echo "❌ Dependency vulnerability scan failed" >> security-summary.md
          fi
          
          echo "## YAML Security" >> security-summary.md
          if [ -f "artifacts/yaml-scan-results/yamllint-report.txt" ]; then
            echo "✅ YAML security scan completed" >> security-summary.md
          else
            echo "❌ YAML security scan failed" >> security-summary.md
          fi

      - name: Upload security summary
        uses: actions/upload-artifact@v3
        with:
          name: security-summary
          path: security-summary.md

  notify-security-team:
    name: Notify Security Team
    runs-on: ubuntu-latest
    needs: [security-report]
    if: failure() || always()
    steps:
      - name: Download security summary
        uses: actions/download-artifact@v3
        with:
          name: security-summary
          path: security-summary

      - name: Check for security issues
        id: check-issues
        run: |
          if [ -f "security-summary/security-summary.md" ]; then
            if grep -q "❌" "security-summary/security-summary.md"; then
              echo "has_issues=true" >> $GITHUB_OUTPUT
            else
              echo "has_issues=false" >> $GITHUB_OUTPUT
            fi
          else
            echo "has_issues=true" >> $GITHUB_OUTPUT
          fi

      - name: Notify on security issues
        if: steps.check-issues.outputs.has_issues == 'true'
        run: |
          echo "🚨 Security issues detected in the scan!"
          echo "Please review the security scan results and address any issues."
          echo "Check the artifacts for detailed reports."
