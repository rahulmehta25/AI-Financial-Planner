# Kubernetes Services Configuration
apiVersion: v1
kind: Service
metadata:
  name: user-service
  namespace: financial-planning
  labels:
    app: user-service
    service: user-service
spec:
  selector:
    app: user-service
  ports:
  - name: http
    port: 8002
    targetPort: 8002
    protocol: TCP
  - name: grpc
    port: 50052
    targetPort: 50052
    protocol: TCP
  - name: metrics
    port: 9091
    targetPort: 9091
    protocol: TCP
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: banking-service
  namespace: financial-planning
  labels:
    app: banking-service
    service: banking-service
spec:
  selector:
    app: banking-service
  ports:
  - name: http
    port: 8003
    targetPort: 8003
    protocol: TCP
  - name: grpc
    port: 50053
    targetPort: 50053
    protocol: TCP
  - name: metrics
    port: 9092
    targetPort: 9092
    protocol: TCP
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: simulation-service
  namespace: financial-planning
  labels:
    app: simulation-service
    service: simulation-service
spec:
  selector:
    app: simulation-service
  ports:
  - name: http
    port: 8001
    targetPort: 8001
    protocol: TCP
  - name: grpc
    port: 50051
    targetPort: 50051
    protocol: TCP
  - name: metrics
    port: 9090
    targetPort: 9090
    protocol: TCP
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: ml-service
  namespace: financial-planning
  labels:
    app: ml-service
    service: ml-service
spec:
  selector:
    app: ml-service
  ports:
  - name: http
    port: 8004
    targetPort: 8004
    protocol: TCP
  - name: grpc
    port: 50054
    targetPort: 50054
    protocol: TCP
  - name: metrics
    port: 9093
    targetPort: 9093
    protocol: TCP
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: notification-service
  namespace: financial-planning
  labels:
    app: notification-service
    service: notification-service
spec:
  selector:
    app: notification-service
  ports:
  - name: http
    port: 8005
    targetPort: 8005
    protocol: TCP
  - name: websocket
    port: 8085
    targetPort: 8085
    protocol: TCP
  - name: grpc
    port: 50055
    targetPort: 50055
    protocol: TCP
  - name: metrics
    port: 9094
    targetPort: 9094
    protocol: TCP
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: document-service
  namespace: financial-planning
  labels:
    app: document-service
    service: document-service
spec:
  selector:
    app: document-service
  ports:
  - name: http
    port: 8006
    targetPort: 8006
    protocol: TCP
  - name: grpc
    port: 50056
    targetPort: 50056
    protocol: TCP
  - name: metrics
    port: 9095
    targetPort: 9095
    protocol: TCP
  type: ClusterIP

---
# GraphQL Gateway Service
apiVersion: v1
kind: Service
metadata:
  name: graphql-gateway
  namespace: financial-planning
  labels:
    app: graphql-gateway
    service: graphql-gateway
spec:
  selector:
    app: graphql-gateway
  ports:
  - name: http
    port: 4000
    targetPort: 4000
    protocol: TCP
  - name: metrics
    port: 9096
    targetPort: 9096
    protocol: TCP
  type: ClusterIP

---
# Database Services
apiVersion: v1
kind: Service
metadata:
  name: postgresql
  namespace: financial-planning
  labels:
    app: postgresql
    service: postgresql
spec:
  selector:
    app: postgresql
  ports:
  - name: postgres
    port: 5432
    targetPort: 5432
    protocol: TCP
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: financial-planning
  labels:
    app: redis
    service: redis
spec:
  selector:
    app: redis
  ports:
  - name: redis
    port: 6379
    targetPort: 6379
    protocol: TCP
  type: ClusterIP

---
# Message Queue Services
apiVersion: v1
kind: Service
metadata:
  name: kafka
  namespace: financial-planning
  labels:
    app: kafka
    service: kafka
spec:
  selector:
    app: kafka
  ports:
  - name: kafka
    port: 9092
    targetPort: 9092
    protocol: TCP
  - name: kafka-external
    port: 9094
    targetPort: 9094
    protocol: TCP
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper
  namespace: financial-planning
  labels:
    app: zookeeper
    service: zookeeper
spec:
  selector:
    app: zookeeper
  ports:
  - name: client
    port: 2181
    targetPort: 2181
    protocol: TCP
  - name: follower
    port: 2888
    targetPort: 2888
    protocol: TCP
  - name: leader
    port: 3888
    targetPort: 3888
    protocol: TCP
  type: ClusterIP

---
# Search and Analytics
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch
  namespace: financial-planning
  labels:
    app: elasticsearch
    service: elasticsearch
spec:
  selector:
    app: elasticsearch
  ports:
  - name: http
    port: 9200
    targetPort: 9200
    protocol: TCP
  - name: transport
    port: 9300
    targetPort: 9300
    protocol: TCP
  type: ClusterIP

---
# Monitoring Services
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: financial-planning
  labels:
    app: prometheus
    service: prometheus
spec:
  selector:
    app: prometheus
  ports:
  - name: http
    port: 9090
    targetPort: 9090
    protocol: TCP
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: financial-planning
  labels:
    app: grafana
    service: grafana
spec:
  selector:
    app: grafana
  ports:
  - name: http
    port: 3000
    targetPort: 3000
    protocol: TCP
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: jaeger
  namespace: financial-planning
  labels:
    app: jaeger
    service: jaeger
spec:
  selector:
    app: jaeger
  ports:
  - name: ui
    port: 16686
    targetPort: 16686
    protocol: TCP
  - name: collector-http
    port: 14268
    targetPort: 14268
    protocol: TCP
  - name: collector-grpc
    port: 14250
    targetPort: 14250
    protocol: TCP
  - name: otlp-grpc
    port: 4317
    targetPort: 4317
    protocol: TCP
  - name: otlp-http
    port: 4318
    targetPort: 4318
    protocol: TCP
  type: ClusterIP

---
# ML Platform Service
apiVersion: v1
kind: Service
metadata:
  name: mlflow
  namespace: financial-planning
  labels:
    app: mlflow
    service: mlflow
spec:
  selector:
    app: mlflow
  ports:
  - name: http
    port: 5000
    targetPort: 5000
    protocol: TCP
  type: ClusterIP

---
# Headless Service for StatefulSets
apiVersion: v1
kind: Service
metadata:
  name: kafka-headless
  namespace: financial-planning
  labels:
    app: kafka
    service: kafka-headless
spec:
  selector:
    app: kafka
  ports:
  - name: kafka
    port: 9092
    targetPort: 9092
    protocol: TCP
  clusterIP: None
  
---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper-headless
  namespace: financial-planning
  labels:
    app: zookeeper
    service: zookeeper-headless
spec:
  selector:
    app: zookeeper
  ports:
  - name: client
    port: 2181
    targetPort: 2181
    protocol: TCP
  - name: follower
    port: 2888
    targetPort: 2888
    protocol: TCP
  - name: leader
    port: 3888
    targetPort: 3888
    protocol: TCP
  clusterIP: None

---
# External LoadBalancer Services for Production
apiVersion: v1
kind: Service
metadata:
  name: financial-planning-external
  namespace: financial-planning
  labels:
    app: financial-planning
    service: external-lb
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: "arn:aws:acm:us-east-1:123456789012:certificate/12345678-1234-1234-1234-123456789012"
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "https"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "http"
spec:
  selector:
    app: graphql-gateway
  ports:
  - name: https
    port: 443
    targetPort: 4000
    protocol: TCP
  - name: http
    port: 80
    targetPort: 4000
    protocol: TCP
  type: LoadBalancer