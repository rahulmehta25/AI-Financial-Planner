# ConfigMaps for Financial Planning Application
apiVersion: v1
kind: ConfigMap
metadata:
  name: financial-planning-config
  namespace: financial-planning
  labels:
    app.kubernetes.io/name: financial-planning
    app.kubernetes.io/component: config
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: kubernetes
data:
  # Application Configuration
  APP_NAME: "financial-planning-api"
  APP_VERSION: "1.0.0"
  ENVIRONMENT: "production"
  LOG_LEVEL: "INFO"
  LOG_FORMAT: "json"
  
  # Database Configuration
  DB_HOST: "postgresql.financial-planning-data.svc.cluster.local"
  DB_PORT: "5432"
  DB_NAME: "financial_planning"
  DB_POOL_SIZE: "20"
  DB_MAX_OVERFLOW: "10"
  DB_POOL_TIMEOUT: "30"
  DB_POOL_RECYCLE: "3600"
  
  # Redis Configuration
  REDIS_HOST: "redis.financial-planning-data.svc.cluster.local"
  REDIS_PORT: "6379"
  REDIS_DB: "0"
  REDIS_MAX_CONNECTIONS: "50"
  REDIS_POOL_SIZE: "20"
  
  # API Configuration
  API_HOST: "0.0.0.0"
  API_PORT: "8000"
  API_WORKERS: "4"
  API_TIMEOUT: "60"
  API_KEEPALIVE: "10"
  MAX_REQUEST_SIZE: "10485760"  # 10MB
  
  # CORS Configuration
  CORS_ORIGINS: "https://app.financialplanning.com,https://admin.financialplanning.com"
  CORS_METHODS: "GET,POST,PUT,DELETE,OPTIONS,PATCH"
  CORS_HEADERS: "Authorization,Content-Type,X-Requested-With,X-Request-ID"
  
  # Rate Limiting
  RATE_LIMIT_PER_MINUTE: "100"
  RATE_LIMIT_BURST: "20"
  
  # Security
  SESSION_TIMEOUT: "3600"
  TOKEN_EXPIRY: "86400"
  PASSWORD_RESET_EXPIRY: "1800"
  
  # External Services
  PLAID_ENV: "production"
  ALPHA_VANTAGE_BASE_URL: "https://www.alphavantage.co"
  
  # Feature Flags
  ENABLE_ML_RECOMMENDATIONS: "true"
  ENABLE_VOICE_INTERFACE: "true"
  ENABLE_BLOCKCHAIN_AUDIT: "true"
  ENABLE_PDF_GENERATION: "true"
  ENABLE_SOCIAL_FEATURES: "true"
  
  # Monitoring
  METRICS_ENABLED: "true"
  METRICS_PORT: "9090"
  METRICS_PATH: "/metrics"
  TRACING_ENABLED: "true"
  JAEGER_AGENT_HOST: "jaeger-agent.financial-planning-monitoring.svc.cluster.local"
  JAEGER_AGENT_PORT: "6831"
  
  # Cache Configuration
  CACHE_TTL: "300"
  CACHE_DEFAULT_TIMEOUT: "60"
  
  # File Storage
  UPLOAD_MAX_SIZE: "52428800"  # 50MB
  ALLOWED_EXTENSIONS: "pdf,jpg,jpeg,png,csv,xlsx"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: financial-planning
  labels:
    app.kubernetes.io/name: nginx
    app.kubernetes.io/component: config
    app.kubernetes.io/version: "1.0.0"
data:
  nginx.conf: |
    user nginx;
    worker_processes auto;
    error_log /var/log/nginx/error.log warn;
    pid /var/run/nginx.pid;
    
    events {
        worker_connections 1024;
        use epoll;
        multi_accept on;
    }
    
    http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;
        
        # Security headers
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self'; connect-src 'self' wss:; frame-ancestors 'none';" always;
        
        # Logging
        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                       '$status $body_bytes_sent "$http_referer" '
                       '"$http_user_agent" "$http_x_forwarded_for" '
                       '$request_time $upstream_response_time';
        
        access_log /var/log/nginx/access.log main;
        
        # Performance settings
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;
        client_max_body_size 50M;
        
        # Gzip compression
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_comp_level 6;
        gzip_types
            text/plain
            text/css
            text/xml
            text/javascript
            application/json
            application/javascript
            application/xml+rss
            application/atom+xml
            image/svg+xml;
        
        # Rate limiting
        limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
        limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/m;
        
        upstream backend {
            least_conn;
            server financial-planning-api.financial-planning.svc.cluster.local:8000 max_fails=3 fail_timeout=30s;
            keepalive 32;
        }
        
        server {
            listen 80 default_server;
            listen [::]:80 default_server;
            server_name _;
            
            # Health check endpoint
            location /nginx-health {
                access_log off;
                return 200 "healthy\n";
                add_header Content-Type text/plain;
            }
            
            # API endpoints
            location /api/ {
                limit_req zone=api burst=20 nodelay;
                
                proxy_pass http://backend;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_set_header X-Request-ID $request_id;
                
                proxy_connect_timeout 5s;
                proxy_send_timeout 60s;
                proxy_read_timeout 60s;
                proxy_buffering on;
                proxy_buffer_size 8k;
                proxy_buffers 8 8k;
            }
            
            # Auth endpoints with stricter rate limiting
            location /api/v1/auth/ {
                limit_req zone=auth burst=5 nodelay;
                
                proxy_pass http://backend;
                proxy_http_version 1.1;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_set_header X-Request-ID $request_id;
            }
            
            # WebSocket support for real-time features
            location /ws/ {
                proxy_pass http://backend;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                
                proxy_read_timeout 86400;
                proxy_send_timeout 86400;
            }
            
            # Health check proxy
            location /health {
                proxy_pass http://backend/health;
                access_log off;
            }
            
            # Metrics endpoint (restrict access)
            location /metrics {
                allow 10.0.0.0/8;
                allow 172.16.0.0/12;
                allow 192.168.0.0/16;
                deny all;
                
                proxy_pass http://backend/metrics;
                access_log off;
            }
        }
    }

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: document-fonts
  namespace: financial-planning
  labels:
    app.kubernetes.io/name: document-service
    app.kubernetes.io/component: fonts
data:
  font-list.txt: |
    # System fonts for PDF generation
    DejaVu Sans
    DejaVu Serif
    Liberation Sans
    Liberation Serif
    Noto Sans
    Noto Serif

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: fluent-bit-config
  namespace: financial-planning
  labels:
    app.kubernetes.io/name: fluent-bit
    app.kubernetes.io/component: config
data:
  fluent-bit.conf: |
    [SERVICE]
        Flush         5
        Log_Level     info
        Daemon        off
        Parsers_File  parsers.conf
        HTTP_Server   On
        HTTP_Listen   0.0.0.0
        HTTP_Port     2020
    
    [INPUT]
        Name              tail
        Path              /var/log/containers/*financial-planning*.log
        Parser            cri
        Tag               financial-planning.*
        Refresh_Interval  5
        Mem_Buf_Limit     50MB
        Skip_Long_Lines   On
        Skip_Empty_Lines  On
    
    [FILTER]
        Name                kubernetes
        Match               financial-planning.*
        Kube_URL            https://kubernetes.default.svc:443
        Kube_CA_File        /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        Kube_Token_File     /var/run/secrets/kubernetes.io/serviceaccount/token
        Kube_Tag_Prefix     financial-planning.var.log.containers.
        Merge_Log           On
        Merge_Log_Key       log_processed
        K8S-Logging.Parser  On
        K8S-Logging.Exclude Off
        Annotations         Off
        Labels              On
    
    [FILTER]
        Name    grep
        Match   financial-planning.*
        Regex   log_level (ERROR|WARN|INFO|DEBUG)
    
    [OUTPUT]
        Name  forward
        Match financial-planning.*
        Host  fluentd.financial-planning-monitoring.svc.cluster.local
        Port  24224
        
    [OUTPUT]
        Name  es
        Match financial-planning.*
        Host  elasticsearch.financial-planning-monitoring.svc.cluster.local
        Port  9200
        Index financial-planning-logs
        Type  _doc
  
  parsers.conf: |
    [PARSER]
        Name        cri
        Format      regex
        Regex       ^(?<time>[^ ]+) (?<stream>stdout|stderr) (?<logtag>[^ ]*) (?<message>.*)$
        Time_Key    time
        Time_Format %Y-%m-%dT%H:%M:%S.%L%z
    
    [PARSER]
        Name        json
        Format      json
        Time_Key    time
        Time_Format %Y-%m-%dT%H:%M:%S.%L
        Time_Keep   On