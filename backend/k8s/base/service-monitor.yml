apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: financial-planning-api-metrics
  namespace: financial-planning
  labels:
    app: financial-planning-api
    release: prometheus
spec:
  selector:
    matchLabels:
      app: financial-planning-api
  endpoints:
  - port: metrics
    path: /metrics
    interval: 30s
    scrapeTimeout: 10s
    scheme: http
    tlsConfig:
      insecureSkipVerify: true
    metricRelabelings:
    - sourceLabels: [__name__]
      regex: 'go_.*'
      action: drop
    - sourceLabels: [__name__]
      regex: 'python_.*'
      action: drop
  namespaceSelector:
    matchNames:
    - financial-planning

---
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: financial-planning-api-rules
  namespace: financial-planning
  labels:
    app: financial-planning-api
    release: prometheus
spec:
  groups:
  - name: financial-planning-api.rules
    rules:
    - alert: FinancialPlanningAPIDown
      expr: up{job="financial-planning-api-metrics"} == 0
      for: 5m
      labels:
        severity: critical
        service: financial-planning-api
      annotations:
        summary: "Financial Planning API is down"
        description: "Financial Planning API has been down for more than 5 minutes"
        
    - alert: FinancialPlanningAPIHighLatency
      expr: histogram_quantile(0.95, rate(http_request_duration_seconds_bucket{job="financial-planning-api-metrics"}[5m])) > 1
      for: 10m
      labels:
        severity: warning
        service: financial-planning-api
      annotations:
        summary: "Financial Planning API high latency"
        description: "Financial Planning API 95th percentile latency is {{ $value }}s"
        
    - alert: FinancialPlanningAPIHighErrorRate
      expr: rate(http_requests_total{job="financial-planning-api-metrics", status=~"5.."}[5m]) / rate(http_requests_total{job="financial-planning-api-metrics"}[5m]) > 0.05
      for: 5m
      labels:
        severity: critical
        service: financial-planning-api
      annotations:
        summary: "Financial Planning API high error rate"
        description: "Financial Planning API error rate is {{ $value | humanizePercentage }}"
        
    - alert: FinancialPlanningAPIHighMemoryUsage
      expr: container_memory_usage_bytes{pod=~"financial-planning-api-.*"} / container_spec_memory_limit_bytes{pod=~"financial-planning-api-.*"} > 0.9
      for: 10m
      labels:
        severity: warning
        service: financial-planning-api
      annotations:
        summary: "Financial Planning API high memory usage"
        description: "Financial Planning API memory usage is {{ $value | humanizePercentage }}"
        
    - alert: FinancialPlanningAPIHighCPUUsage
      expr: rate(container_cpu_usage_seconds_total{pod=~"financial-planning-api-.*"}[5m]) / container_spec_cpu_quota{pod=~"financial-planning-api-.*"} * 100000 > 90
      for: 10m
      labels:
        severity: warning
        service: financial-planning-api
      annotations:
        summary: "Financial Planning API high CPU usage"
        description: "Financial Planning API CPU usage is {{ $value }}%"
        
    - alert: FinancialPlanningAPIPodCrashLooping
      expr: rate(kube_pod_container_status_restarts_total{pod=~"financial-planning-api-.*"}[5m]) > 0
      for: 5m
      labels:
        severity: critical
        service: financial-planning-api
      annotations:
        summary: "Financial Planning API pod is crash looping"
        description: "Pod {{ $labels.pod }} is restarting frequently"
        
    - alert: FinancialPlanningAPIDatabaseConnectionFails
      expr: increase(database_connections_failed_total{job="financial-planning-api-metrics"}[5m]) > 5
      for: 2m
      labels:
        severity: critical
        service: financial-planning-api
      annotations:
        summary: "Financial Planning API database connection failures"
        description: "Database connection failures: {{ $value }}"