[tool:pytest]
# Integration Test Configuration

# Test discovery patterns
python_files = test_*.py *_test.py
python_classes = Test* 
python_functions = test_*

# Test directories
testpaths = tests/integration

# Minimum version
minversion = 6.0

# Addopts - Default command line options
addopts = 
    -v
    --strict-markers
    --strict-config
    --tb=short
    --maxfail=5
    --disable-warnings
    --asyncio-mode=auto
    --timeout=300
    --durations=10
    --cov=app
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml
    --cov-fail-under=80

# Markers
markers =
    integration: Integration tests requiring full system setup
    slow: Slow running tests (>10 seconds)
    external_service: Tests requiring external services
    load_test: Load and performance tests
    security_test: Security-focused tests
    user_journey: End-to-end user journey tests
    microservice: Microservice integration tests
    banking: Banking integration tests
    notifications: Notification system tests
    pdf: PDF generation tests
    simulation: Financial simulation tests
    auth: Authentication and authorization tests
    database: Database integration tests
    cache: Cache integration tests
    websocket: WebSocket real-time tests
    audit: Audit trail tests
    compliance: Compliance and regulatory tests

# Test timeout (in seconds)
timeout = 300

# Asyncio configuration
asyncio_mode = auto

# Logging configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Ignore warnings
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning

# JUnit XML output for CI/CD
junit_family = xunit2

# Coverage configuration
[coverage:run]
source = app
omit = 
    app/tests/*
    app/migrations/*
    app/venv/*
    app/__pycache__/*
    */tests/*
    */test_*
    */.venv/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = htmlcov

[coverage:xml]
output = coverage.xml