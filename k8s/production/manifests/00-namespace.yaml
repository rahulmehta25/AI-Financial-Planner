---
apiVersion: v1
kind: Namespace
metadata:
  name: financial-planning-prod
  labels:
    name: financial-planning-prod
    environment: production
    team: platform
    cost-center: engineering
    security-scan: enabled
  annotations:
    kubernetes.io/managed-by: "platform-team"
    security.policy/network-isolation: "strict"
    security.policy/pod-security-standard: "restricted"
    compliance.regulation/data-protection: "pci-dss,gdpr"
    backup.policy/enabled: "true"
    monitoring.observability/enabled: "true"
spec: {}
---
# Pod Security Policy for Production
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: financial-planning-prod-psp
  namespace: financial-planning-prod
  labels:
    environment: production
spec:
  privileged: false
  allowPrivilegeEscalation: false
  requiredDropCapabilities:
    - ALL
  volumes:
    - 'configMap'
    - 'emptyDir'
    - 'projected'
    - 'secret'
    - 'downwardAPI'
    - 'persistentVolumeClaim'
  hostNetwork: false
  hostIPC: false
  hostPID: false
  runAsUser:
    rule: 'MustRunAsNonRoot'
  supplementalGroups:
    rule: 'MustRunAs'
    ranges:
      - min: 1
        max: 65535
  fsGroup:
    rule: 'MustRunAs'
    ranges:
      - min: 1
        max: 65535
  readOnlyRootFilesystem: true
  seLinux:
    rule: 'RunAsAny'
---
# Resource Quota for Production Environment
apiVersion: v1
kind: ResourceQuota
metadata:
  name: financial-planning-prod-quota
  namespace: financial-planning-prod
  labels:
    environment: production
spec:
  hard:
    # Compute Resources
    requests.cpu: "20"      # 20 CPU cores for requests
    requests.memory: 40Gi   # 40GB RAM for requests
    limits.cpu: "40"        # 40 CPU cores for limits
    limits.memory: 80Gi     # 80GB RAM for limits
    
    # Storage Resources
    requests.storage: 200Gi
    persistentvolumeclaims: "10"
    
    # Object Counts
    pods: "50"
    services: "20"
    secrets: "20"
    configmaps: "20"
    replicationcontrollers: "0"  # Force use of Deployments
    
    # Networking
    services.loadbalancers: "5"
    services.nodeports: "0"      # Disable NodePort services
---
# Limit Range for Default Pod Resources
apiVersion: v1
kind: LimitRange
metadata:
  name: financial-planning-prod-limits
  namespace: financial-planning-prod
  labels:
    environment: production
spec:
  limits:
  - default:
      cpu: "2"
      memory: "4Gi"
    defaultRequest:
      cpu: "200m"
      memory: "512Mi"
    max:
      cpu: "8"
      memory: "16Gi"
    min:
      cpu: "100m"
      memory: "128Mi"
    type: Container
  - default:
      storage: "10Gi"
    max:
      storage: "50Gi"
    min:
      storage: "1Gi"
    type: PersistentVolumeClaim